name: Version or Publish

on:
  push:
    branches:
      - main

permissions:
  contents: write  # for merging the PR and creating the release
  pull-requests: write # for creating the version PR

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    # Don't run on forks. We can and should only release from the main repo.
    if: github.repository == 'hirasso/rh-admin-utils'

    name: Create Version PR or Publish

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
      - name: Configure Git
        run: |
          git config --global user.email "bot@rassohilber.com"
          git config --global user.name "Rasso Hilber's Bot"

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      # Setup PNPM before node.js, so that we use the cache in the next action
      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Require Build
        run: pnpm build

      - name: Checkout dist repo
        uses: actions/checkout@v3
        with:
          repository: hirasso/rh-admin-utils-dist
          ref: empty
          path: dist
          # secrets.GITHUB_TOKEN would not be enough to push to the dist repo (needed later)
          token: ${{ secrets.HIRASSO_ACTIONS_TOKEN }}

      # Run this before changesets, to prevent invalid releases from being bublished
      - name: Prepare dist repo
        run: |
          ./scripts/prefixNamespaces.sh
          ./scripts/prepareDistFolder.sh

      # Run changesets action either if there are unreleased changesets (= a PR must be created)
      # or if the commit message matches the release PR (= new versions must be published to NPM)
      - name: Create changesets PR or Publish
        id: cs
        uses: changesets/action@v1
        with:
          title: '[CI] Release'
          commit: '[CI] Release'
          version: pnpm run version
          publish: pnpm run publish
        env:
          GITHUB_TOKEN: ${{ secrets.HIRASSO_ACTIONS_TOKEN }}

      - name: Push release to dist repo
        if: steps.cs.outputs.published == 'true'
        run: |
          ./scripts/pushReleaseToDist.sh